# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github pulp_ostree' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template

---
name: "Test"
on:
  workflow_call:

defaults:
  run:
    working-directory: "pulp_ostree"

jobs:
  test:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: pulp
          - TEST: azure
          - TEST: s3
          - TEST: lowerbounds

    steps:
      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 1
          path: "pulp_ostree"

      - uses: "actions/checkout@v4"
        with:
          fetch-depth: 1
          repository: "pulp/pulp-openapi-generator"
          path: "pulp-openapi-generator"

      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.11"

      - name: "Download plugin package"
        uses: "actions/download-artifact@v4"
        with:
          name: "plugin_package"
          path: "pulp_ostree/dist/"

      - name: "Download API specs"
        uses: "actions/download-artifact@v4"
        with:
          name: "api_spec"
          path: "pulp_ostree/"

      - name: "Download client packages"
        uses: "actions/download-artifact@v4"
        with:
          name: "python-client.tar"
          path: "pulp_ostree"

      - name: "Unpack client packages"
        working-directory: "pulp-openapi-generator"
        run: |
          mkdir -p "pulp_ostree-client"
          pushd "pulp_ostree-client"
          tar xvf "../../pulp_ostree/ostree-python-client.tar"
          popd

      - name: "Install python dependencies"
        run: |
          echo ::group::PYDEPS
          pip install towncrier twine wheel httpie docker netaddr boto3 ansible mkdocs jq jsonpatch
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/pulp_ostree/.ci/assets/httpie/" >> $GITHUB_ENV
          echo ::endgroup::

      - name: "Set environment variables"
        run: |
          echo "TEST=${{ matrix.env.TEST }}" >> $GITHUB_ENV

      - name: "Before Install"
        run: |
          .github/workflows/scripts/before_install.sh
        shell: "bash"
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
      - uses: ruby/setup-ruby@v1
        if: ${{ env.TEST == 'pulp' }}
        with:
          ruby-version: "2.6"

      - name: "Install"
        run: |
          .github/workflows/scripts/install.sh
        shell: "bash"
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"

      - name: "Before Script"
        run: |
          .github/workflows/scripts/before_script.sh
        shell: "bash"
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"
          REDIS_DISABLED: "${{ contains('', matrix.env.TEST) }}"

      - name: "Script"
        run: |
          .github/workflows/scripts/script.sh
        shell: "bash"
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_CONTEXT: "${{ github.event.pull_request.commits_url }}"

      - name: "Extract Deprecations from Logs"
        run: |
          docker logs pulp 2>&1 | grep -i pulpcore.deprecation | tee deprecations-${{ matrix.env.TEST }}.txt

      - name: "Upload Deprecations"
        uses: actions/upload-artifact@v4
        with:
          name: "deprecations-${{ matrix.env.TEST }}"
          path: "pulp_ostree/deprecations-${{ matrix.env.TEST }}.txt"
          if-no-files-found: "error"
          retention-days: 5
          overwrite: true

      - name: "Logs"
        if: always()
        run: |
          echo "Need to debug? Please check: https://github.com/marketplace/actions/debugging-with-tmate"
          http --timeout 30 --check-status --pretty format --print hb "https://pulp${PULP_API_ROOT}api/v3/status/" || true
          docker images || true
          docker ps -a || true
          docker logs pulp || true
          docker exec pulp ls -latr /etc/yum.repos.d/ || true
          docker exec pulp cat /etc/yum.repos.d/* || true
          docker exec pulp bash -c "pip3 list && pip3 install pipdeptree && pipdeptree"
...
